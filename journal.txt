1. unhosted architecture, libraries, advice
2. dropbox, oauth, cookies. still not sure if autologin will work.
3. demo of dropbox: okay, at least I can connect to it.
4. data structures for queues. refresher on JS / ES6 updates
5. start a journal
6. responsive / flexbox studies
7. start using jquery. consider jquery UI for animation but --  later
8. visualize list items
9. copy CSS / structure from an online example so I don't have to figure out design
10. get 'add more' button working
11. get status changes / CSS in
12. get delete button working (copying template more) - sets to cancelled or clears out
13. edit button: sets to contenteditable; put text into a div
14. add an 'editing' state and adjust how things visualize
15. support clicking in/out of editing boxes and enter presses
16. add age strings (1h, 1w, etc)
17. change everything to divs + figure out how to get them to flow correctly
18. add selection, two clicks = check off (for mobile, mainly)
19. animate selection borders / fix so they don't reflow anything
20. add hints for how selection works
21. use html5 templates instead of constructing everything in JS
22.	make editing buttons look better -- cover 100% of vertical size with line-height
23. check button on elements
24. got dragging working -- after some pain. had to use globals.
25. create a drag clone to hold position; when drag is released move to that position.
26. added X to trash items; changed drop event to fire on whole document.
26. attach reference to underlying data to Dom nodes
27. priorities update to 'fit in' with neighbors when dragged (+ blink a bit), plus update on underlying data
[weeklong absence]
28. arrow keys change selection
29. update priorities in 1s; propagate them on the list.
30. design decisions:
	should double clicking edit? or clicking and holding? should double clicking change status?
	clicking and holding has to start dragging, so that can't do anything else.
	so maybe doubleclick = edit. single click = check?
	for cancelled items, no checkmark, just a 'return to active' button?
	* clicking should toggle completion
	* swiping should delete (on mobile) 
	* holding should toggle editing/selection (separate from dragging)
31. hold to edit. click once to toggle.
32: bug: tries to set as editing after clicks on little buttons. (problem: mousedown vs mouseup vs click)
33: bug: enter on edit box also checks/uncecks (problem: keypress vs keydown, stoppropagation vs preventdefault)
[weeklong absence]
34: added title to list display, double click to edit; enter to submit.
35. bug -- edit button stopped working because e.preventDefault() was removed. wasted >1hr before that looking badly for it, when it was simple. (Found via deleting most of the code, but it was obvious in hindsight.)
36. added 'Edited' flag, for determining when to save, and set to automatically save every 2s if anything changes.
37. serialize data into text file format
38. deserialize data (with lots of regex + capture groups) into list item formats
39. add 'age' field [3h] using human readable form, deserialize into dates
40. loading/saving from Dropbox (testing with direct access token)
41. auth with Oauth2; client ID; token returned in redirect URI
42. modal window for going to dropbox (auto-redirect is confusing and annoying)
43. bugs with delete + enter + priorities 
44. enter button adds repeated new entries, for fast listing
45. set things as edited only if they change 
46. remove cancelled state. it was pointless, i think. i can always add it back.
47. better modal / Dropbox logo for logging in
48. add filename display
49. trash bug (can't move the list up cause the trash region is toggled / in the way / can't reflow while dragging?) (nevermind -- fixed with pointer-events: none) (but should just remove the whole thing)
50. filled up my list with 25 to-dos. but really need more lists to reach 'usable in my life' status
51. try to position better on mobile. things seem to mostly work on my phone. but no real deep testing yet.
52. fixed up hotkeys / selection / etc to be almost pleasant to use (including scrolling selection)
53. filename selection / creation of new files / things like that
54. okay it's really all in the Git history now so I can probably stop doing this.
TODO, though: 
	- set up github -> SNS -> S3 uploader for deployment
	- fix up file format: need to save completed items, figure out due dates, ages; actually test comments? add tutorial for new files

UI:
	better way to highlight finished vs in progress vs deleted
	let add elements at the top or between two other elements?
	add ? button to explain things
	add link to my blog / explanation

	TODO: and easy delete for 'new task...' entries?

	?? age vs due date? (priority = proxy for due date?)
	what should age be 'relative' to? last edited? or something else? -- pretty unnatural
		last updated: 8/21 // at the end of the file
		[added 8/20] or something for ages
		[due 8/25] or something for due dates
		but, no more working on that until the dropbox part is implemented

DBX:
	help menu: explain dropbox integration / select integration
	help menu: explain dropbox file format, in case user modifies anything?
	loading icon
	logout icon